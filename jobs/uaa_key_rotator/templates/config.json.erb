<%
  uaa_db = link('uaa_db').p('uaadb.databases').find { |db| db['tag'] == 'uaa' }
  uaa_role = link('uaa_db').p('uaadb.roles').find { |role| role['tag'] == 'admin' }

  uaa_db_address = nil
  link('uaa_db').if_p('uaadb.address') do |address|
    uaa_db_address = address
  end.else do
    if_link('database') do |db_link|
      uaa_db_address = db_link.instances[0].address
    end.else do
      raise 'Required uaadb address configuration not specified. Please specify uaadb.address (on the uaa job) or check your bosh linked database configuration.'
    end
  end

  uaa_tls = 'enabled';
  link('uaa_db').if_p('uaadb.tls') do |linked_tls|
    uaa_tls = linked_tls
  end

  case uaa_tls
    when 'enabled'
      database_tls_enabled = true
      skip_ssl_validation = false
    when 'enabled_skip_all_validation', 'enabled_skip_hostname_validation'
      database_tls_enabled = true
      skip_ssl_validation = true
    when 'disabled'
      database_tls_enabled = false
      skip_ssl_validation = false
  end

  tls_protocols = ''
  link('uaa_db').if_p('uaadb.tls_protocols') do |uaa_db_tls_protocols|
    tls_protocols = uaa_db_tls_protocols
  end
%>
{
  "activeKeyLabel": "<%= link('uaa_keys').p('encryption.active_key_label')%>",
  "encryptionKeys": <%= link('uaa_keys').p('encryption.encryption_keys').to_json%>,
  "databaseHostname": "<%= uaa_db_address%>",
  "databasePort": "<%= link('uaa_db').p('uaadb.port')%>",
  "databaseScheme": "<%= link('uaa_db').p('uaadb.db_scheme')%>",
  "databaseName": "<%= uaa_db['name'] %>",
  "databaseUsername": "<%= uaa_role['name'] %>",
  "databasePassword": "<%= uaa_role['password'] %>",
  "databaseTlsEnabled":<%= database_tls_enabled%>,
  "databaseSkipSSLValidation":<%= skip_ssl_validation%>,
  "databaseTLSProtocols":"<%= tls_protocols %>"
}